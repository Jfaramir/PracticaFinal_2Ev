/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package codigo;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author xp
 */
public class Formulario extends javax.swing.JFrame {

    /**
     * Creates new form Formulario
     */
    
    String cadena_error = "";
    DefaultTableModel modelo;

    DefaultTableModel tm ;
    
   
    
    public Formulario() {
        initComponents();
        
        RellenarTabla1(jComboBox1.getSelectedItem().toString());
        
        RellenarTabla2(jComboBox1.getSelectedItem().toString());
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        errores = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla2 = new javax.swing.JTable();
        EscogerFila = new javax.swing.JButton();
        Añadir = new javax.swing.JButton();
        Borrar = new javax.swing.JButton();
        Modificar = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        tabla = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        };
        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tabla);

        tabla2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabla2.setCellSelectionEnabled(true);
        jScrollPane2.setViewportView(tabla2);

        EscogerFila.setText("Escoger fila");
        EscogerFila.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EscogerFilaActionPerformed(evt);
            }
        });

        Añadir.setText("Añadir");
        Añadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AñadirActionPerformed(evt);
            }
        });

        Borrar.setText("Borrar");
        Borrar.setEnabled(false);
        Borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarActionPerformed(evt);
            }
        });

        Modificar.setText("Modificar");
        Modificar.setEnabled(false);
        Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "artista", "album", "cancion"}));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText("RECUERDE CLICKAR FUERA DE LA TABLA AL TERMINA DE MODIFICAR EL ULTIMO DE SUS VALORES");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(errores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Añadir, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Modificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(Borrar, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EscogerFila, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(EscogerFila, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Añadir, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Borrar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(errores, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EscogerFilaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EscogerFilaActionPerformed
        EscogeFila();
        
        Borrar.setEnabled(true);
        Modificar.setEnabled(true);
        
        errores.setText("Fila escogida correctamente");
    }//GEN-LAST:event_EscogerFilaActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        gc.CerrarConexion();
    }//GEN-LAST:event_formWindowClosing

    private void AñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AñadirActionPerformed
        
        gc.insertarDatos(jComboBox1.getSelectedItem().toString(), tabla2.getValueAt(0, 0).toString(), tabla2.getValueAt(0, 1).toString(), tabla2.getValueAt(0, 2).toString(), tabla2.getValueAt(0, 3).toString(), tabla2.getValueAt(0, 4).toString());
        RellenarTabla1(jComboBox1.getSelectedItem().toString());
        RellenarTabla2(jComboBox1.getSelectedItem().toString());
        
        errores.setText(gc.cadena_error);
        
    }//GEN-LAST:event_AñadirActionPerformed

    private void ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarActionPerformed
        gc.ModificarDatos(jComboBox1.getSelectedItem().toString()
                        , tabla2.getValueAt(0, 0).toString(), tabla2.getValueAt(0, 1).toString()
                        , tabla2.getValueAt(0, 2).toString(), tabla2.getValueAt(0, 3).toString()
                        , tabla2.getValueAt(0, 4).toString()
                        , tabla2.getColumnName(0), tabla2.getColumnName(1), tabla2.getColumnName(2)
                        , tabla2.getColumnName(3), tabla2.getColumnName(4));
        
        RellenarTabla1(jComboBox1.getSelectedItem().toString());
        RellenarTabla2(jComboBox1.getSelectedItem().toString());
        
        errores.setText(gc.cadena_error);
    }//GEN-LAST:event_ModificarActionPerformed

    private void BorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarActionPerformed
        gc.dropColumna(jComboBox1.getSelectedItem().toString(), tabla2.getValueAt(0, 0).toString());
        RellenarTabla1(jComboBox1.getSelectedItem().toString());
        RellenarTabla2(jComboBox1.getSelectedItem().toString());
        
        errores.setText(gc.cadena_error);
    }//GEN-LAST:event_BorrarActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        RellenarTabla1(jComboBox1.getSelectedItem().toString());
        
        RellenarTabla2(jComboBox1.getSelectedItem().toString());
        
        errores.setText(gc.cadena_error);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    GestorConexion gc = new GestorConexion();
    
    public void RellenarTabla1(String nombre){
        
        try {
            gc.conn1.setAutoCommit(false);
            
            Statement sta = gc.conn1.createStatement();
            
            String query = "SELECT * FROM "+ nombre +"";
            
            ResultSet rs = sta.executeQuery(query);           
            ResultSetMetaData metaDatos = rs.getMetaData();
            
            int numColumnas = metaDatos.getColumnCount();
            
            modelo = new DefaultTableModel();
            
            this.tabla.setModel(modelo);
            
            for (int i = 1; i <= numColumnas; i++) {
                modelo.addColumn(metaDatos.getColumnLabel(i));
            }
            
            while (rs.next()) {                
                Object[] fila = new Object[numColumnas];
                
                for (int i = 0; i < numColumnas; i++) {
                    fila [i] = rs.getObject(i +1);
                }
                modelo.addRow(fila);
            }
            cadena_error = "Conectado a spotify";
            errores.setText(cadena_error);
            
            rs.close();
            
            sta.close();
            
            
            
        } catch (Exception e) {
            e.printStackTrace();
            cadena_error = e.toString();
            errores.setText(cadena_error);
        }
    }
    
    public void  RellenarTabla2(String nombre){
        
        try {
            gc.conn1.setAutoCommit(false);
            
            Statement sta = gc.conn1.createStatement();
            
            String query = "SELECT * FROM "+ nombre + " WHERE "+ tabla.getSelectedRow() +"";
            
            ResultSet rs = sta.executeQuery(query);           
            ResultSetMetaData metaDatos = rs.getMetaData();
            
            int numColumnas = metaDatos.getColumnCount();
            int numFilas = 1;
            
            modelo = new DefaultTableModel();
            
            this.tabla2.setModel(modelo);
            
            for (int i = 1; i <= numColumnas; i++) {
                modelo.addColumn(metaDatos.getColumnLabel(i));
            }
            
            if (rs.next()) {                
                Object[] fila = new Object[numColumnas];
                
                for (int i = 0; i < numColumnas; i++) {
                    fila [3] = rs.getObject(4);
                }
                modelo.addRow(fila);
            }
            
            
//                            
//                Object[] fila = new Object[numFilas];
//                for (int i = 0; i < numColumnas; i++) {
//                    fila [i] = rs.getObject(i +1);
//                }
//                modelo.addRow(fila);
//            
//            if(tabla2 == null){
//                fila [tabla.getSelectedRow()] = rs.getObject(1);
//            }    
                
            
            cadena_error = "Conectado a spotify";
            errores.setText(cadena_error);
            
            rs.close();
            
            sta.close();
            
        } catch (Exception e) {
            e.printStackTrace();
            cadena_error = e.toString();
            errores.setText(cadena_error);
        }
    }
    
    public void EscogeFila(){
    
    DefaultTableModel modeloOrigen = (DefaultTableModel) tabla.getModel(),
                      modeloDestino = (DefaultTableModel) tabla2.getModel();
    
        if(tabla.getSelectedRowCount() > 0) {
        
            int[] indices = tabla.getSelectedRows();
        
            for(int i : indices) {
                Object[] fila = new Object[modeloOrigen.getColumnCount()];
        
                for(int j = 0; j < fila.length; j++) {
                    fila[j] = modeloOrigen.getValueAt(i, j);
                }
        
         
                modeloDestino.addRow(fila);
                if(modeloDestino.getRowCount() == 2){
                    modeloDestino.removeRow(0);
                }        
            }
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Formulario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Añadir;
    private javax.swing.JButton Borrar;
    private javax.swing.JButton EscogerFila;
    private javax.swing.JButton Modificar;
    private javax.swing.JLabel errores;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabla;
    private javax.swing.JTable tabla2;
    // End of variables declaration//GEN-END:variables
}
